package chap02;

public class PrimeNumber1 {

	//소수의 나열 위한 알고리즘
	//소수는 자신과 1 의외에 어떤 정수로도 나눠지지 않는다
	//그래서 정수 n에 대하여 2부터 n-1 까지의 어떤 정수로도 나누어떨어지지않는 조건이면 소수임을 알수있음

	//그러니까 if문으로 조건을 걸고 나눗셈이 되게하자
	
	//만약 떨어지는 정수가 하나 이상 존재하면 그 수는 합성수	

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		 int num = 0;
	        
	        //나누어지는 수
	        for (int n = 2; n <= 1000; n++) {
	        	//n의 값을 2부터 시작하여 1000이 될때까지 1씩 증가하면서 그 값이 소수인지 판단하는 for문
	            //나누는 수
	            int i;
	            for (i = 2; i < n; i++) {
	            	num++;
	                if (n % i == 0) //나누어 떨어지면 소수가아니고 그럼 반복불필요라 break
	                    break;
	            }
	            // 2~n-1까지 약수가 없다면 소수
	            if (n == i)
	                System.out.println(n);
	        }
	        
	       //for문 반복이 종료된 시점에서 변수i의 값은
			//n이 소수인경우 : n과 같은 값 (for문이 끝까지 실행됨)
			//n이 합성수인 경우: n보다 작은값 (for문이 중단됨)
	        
	        //n이 2또는 3으로 나눠떨어지지 않으면 2x2인 4 또는 2x3인 6으로도 나누어떨어지지않음
	        //그럼으로 이 프로그램은 불필요한 나눗셈을 하고있음
	        //즉, 정수n이 소수인지의 여부는 
	        //2부터 n-1까지의 어떤 소수로도 나누어떨어지자 않는 조건만 만족하는지 조사하면됨
	        
	        //예를들어 7이 소수인지는 7보다 작은 소수 2,3,5로 나눗셈을 하면 충분
	        //이렇게하면 계산시간을 줄일수있습니다
	        System.out.println("나눗셈을 수행한 횟수 : "+num);
	    }
	}


